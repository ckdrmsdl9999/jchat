{"name":"Jchat","tagline":"Console chatting program written in java utilizing java sockets and java threads","body":"# jchat\r\n---------\r\n\r\nA light-weight client-server console chatting program built on top of ocsf\r\nframework. The bidirectional server-client communication is enabled through\r\nJava sockets and Java threads.  This program also includes a user authentication\r\nsystem, a command handler, and a command-line shell.\r\n\r\n## OCSF: The Object Client/Server Framework \r\nOCSF is a Java framework that can be used to develop client-server systems.\r\n\r\nThis framework is called OCSF to reflect the fact that the client-server\r\nsystems built using this framework will exchange Java objects. It is therefore\r\nstrongly object-oriented as all the lower-level communication layers are\r\nencapslated inside the framework.\r\n\r\nThis framework is described in the book [Object-Oriented Software Engineering:\r\nPractical Software Development using UML and Java][2] By Timothy C.  Lethbridge\r\nand Robert Lagani√®re.\r\n\r\n## Requirement\r\n1. [Java SE JDK][1]\r\n\r\n## Compilation and Usage\r\n\r\n1. Change directory to the root of `jchat`.\r\n\r\n2. Execute the following to compile the client program.\r\n```\r\n$ javac ClientConsole.java\r\n```\r\n3. Execute the following to compile the server program.\r\n```\r\n$ javac ServerConsole.java\r\n```\r\n4. To run the client program, execute following\r\n```\r\n$ java ClientConsole [HOST] [PORT]\r\n```\r\nHere, the default HOST is localhost, and the default PORT is 5555.\r\n\r\n5. To run the server program, execute the following\r\n```\r\n$ java ServerConsole [PORT]\r\n```\r\nHere, the default PORT is 5555.\r\n\r\n## Client-side Commands\r\n\r\nAll commands must begin with the charactor '#'. After you log in, all other\r\ninputs will be treated as messages.\r\n\r\n1. Enter `#login UID PASSWORD` to login. Here the argument `UID` is the\r\n   username, and `PASSWORD` is the password.\r\n\r\n2. Enter `#logoff` to logoff and exit this program.\r\n\r\n3. To register an account, enter `#reg UID PASSWORD EMAIL`, where `UID` is your\r\n   intended user id, `PASSWORD` is your password, and `EMAIL` is your email\r\naddress.\r\n\r\n4. Enter `#reginfo UID` to display user information.\r\n\r\n## Server-side Commands\r\n\r\nAll commands must begin with the character '#'. All other inputs are treated as\r\nmessages, which send to all connected clients.\r\n\r\n1. Enter `#quit` to terminate the server program.\r\n\r\n2. Enter `#stop` to stop listening the port.\r\n\r\n3. Enter `#start` to resume listening the port.\r\n\r\n4. Enter `#setport` to change the port number.\r\n\r\n5. Enter `#getport` to display the current port.\r\n\r\n[1]:http://www.oracle.com/technetwork/java/javase/downloads/index.html\r\n[2]:http://www.amazon.com/Object-Oriented-Software-Engineering-Practical-Development/dp/0077109082/ref=cm_cr_pr_product_top?ie=UTF8\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}